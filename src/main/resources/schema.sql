CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS requests (
 id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
 description VARCHAR(255) NOT NULL,
 requestor_id BIGINT NOT NULL,
 CONSTRAINT fk_requests_to_user FOREIGN KEY(requestor_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS items (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  description VARCHAR(255) NOT NULL,
  available BOOLEAN NOT NULL,
  owner_id BIGINT NOT NULL,
  request_id BIGINT,
  CONSTRAINT fk_items_to_users FOREIGN KEY(owner_id) REFERENCES users(id),
  CONSTRAINT fk_items_to_requests FOREIGN KEY(request_id) REFERENCES requests(id)
);

CREATE TABLE IF NOT EXISTS bookings (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  start_date TIMESTAMP NOT NULL,
  end_date TIMESTAMP NOT NULL,
  item_id BIGINT NOT NULL,
  booker_id BIGINT NOT NULL,
  status VARCHAR(40) NOT NULL,
  CONSTRAINT fk_bookings_to_items FOREIGN KEY(item_id) REFERENCES items(id),
  CONSTRAINT fk_bookings_to_users FOREIGN KEY(booker_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS comments (
 id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
 text VARCHAR(500) NOT NULL,
 item_id BIGINT NOT NULL,
 author_id BIGINT NOT NULL,
 create_date TIMESTAMP,
 CONSTRAINT fk_comments_to_items FOREIGN KEY(item_id) REFERENCES items(id),
 CONSTRAINT fk_comments_to_users FOREIGN KEY(author_id) REFERENCES users(id)
);
